{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msmel\\\\github\\\\shopping-list\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ProductItem from './components/product-item'; // import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nclass ShopApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        title: \"Чай\",\n        taken: false\n      }, {\n        title: \"Сахар\",\n        taken: true\n      }, {\n        title: \"Колбаса\",\n        taken: false\n      }]\n    };\n  }\n\n  toggleItem(index) {\n    // console.log(index);\n    const items = this.state.items;\n    let taken = items[index].taken;\n    items[index].taken = !taken;\n    this.setState({\n      items\n    });\n  } // addItem(){\n  //   //создать текстовое поле и кнопку\n  //   //записать текущее состояние в переменную\n  //   //изменить сосотояние\n  //   //сохранить новое состояние\n  //   this.setState({});\n  // }\n  //\n  // deleteItem(){\n  //\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.items.map((item, index) => {\n      // return <li key={index}>{items.title}</li>\n      const className = item.taken ? 'taken' : '';\n      return React.createElement(ProductItem, {\n        key: index,\n        title: item.title,\n        className: className,\n        toggleItem: this.toggleItem.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(ShopApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\msmel\\github\\shopping-list\\src\\index.js"],"names":["React","Component","ReactDOM","ProductItem","ShopApp","constructor","props","state","items","title","taken","toggleItem","index","setState","render","map","item","className","bind","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADK,EAKL;AACED,QAAAA,KAAK,EAAE,OADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALK,EASL;AACED,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATK;AADI,KAAb;AAgBD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAO;AACf;AACA,UAAMJ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,QAAIE,KAAK,GAAGF,KAAK,CAACI,KAAD,CAAL,CAAaF,KAAzB;AACAF,IAAAA,KAAK,CAACI,KAAD,CAAL,CAAaF,KAAb,GAAqB,CAACA,KAAtB;AAEA,SAAKG,QAAL,CAAc;AAACL,MAAAA;AAAD,KAAd;AACD,GA9B2B,CAgC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM,KAAKP,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqB,CAACC,IAAD,EAAOJ,KAAP,KAAiB;AACtC;AACA,YAAMK,SAAS,GAAGD,IAAI,CAACN,KAAL,GAAa,OAAb,GAAuB,EAAzC;AACA,aAAO,oBAAC,WAAD;AAAe,QAAA,GAAG,EAAIE,KAAtB;AACe,QAAA,KAAK,EAAII,IAAI,CAACP,KAD7B;AAEe,QAAA,SAAS,EAAIQ,SAF5B;AAGe,QAAA,UAAU,EAAI,KAAKN,UAAL,CAAgBO,IAAhB,CAAqB,IAArB,EAA2BN,KAA3B,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KARG,CAFN,CADF,EAcE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AAmBD;;AAhE2B;;AAmEhCV,QAAQ,CAACY,MAAT,CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ProductItem from './components/product-item';\r\n// import App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n//\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n\r\nclass ShopApp extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        items: [\r\n          {\r\n            title: \"Чай\",\r\n            taken: false\r\n          },\r\n          {\r\n            title: \"Сахар\",\r\n            taken: true\r\n          },\r\n          {\r\n            title: \"Колбаса\",\r\n            taken: false\r\n          }\r\n        ]\r\n      }\r\n    }\r\n\r\n    toggleItem(index){\r\n      // console.log(index);\r\n      const items = this.state.items;\r\n      let taken = items[index].taken;\r\n      items[index].taken = !taken;\r\n\r\n      this.setState({items});\r\n    }\r\n\r\n    // addItem(){\r\n    //   //создать текстовое поле и кнопку\r\n    //   //записать текущее состояние в переменную\r\n    //   //изменить сосотояние\r\n    //   //сохранить новое состояние\r\n    //   this.setState({});\r\n    // }\r\n    //\r\n    // deleteItem(){\r\n    //\r\n    // }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <ol>\r\n            {\r\n                this.state.items.map((item, index) => {\r\n                // return <li key={index}>{items.title}</li>\r\n                const className = item.taken ? 'taken' : '';\r\n                return <ProductItem   key = {index}\r\n                                      title = {item.title}\r\n                                      className = {className}\r\n                                      toggleItem = {this.toggleItem.bind(this, index)}\r\n                />\r\n            })\r\n            }\r\n          </ol>\r\n          <input type=\"text\" name=\"title\" />\r\n        </div>\r\n\r\n      );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n  <ShopApp/>,\r\n  document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}